name: Publish Package

on:
  push:
    branches: [main, master, develop]
  pull_request:
    branches: [main, master, develop]
  workflow_dispatch:
    inputs:
      package:
        description: 'Package to publish'
        required: true
        type: choice
        options:
          - test-mcp
          - ask-starknet
          - cairo-coder
          - argent
          - avnu
          - braavos
          - erc20
          - erc721
          - transaction
          - artpeace
          - contract
          - fibrous
          - okx
          - openzeppelin
          - opus
          - starknet-rpc
          - scarb
          - unruggable
          - vesu
          - ekubo
          - extended
          - endurfi
      version:
        description: 'Version type'
        required: true
        type: choice
        options:
          - patch
          - minor
          - major

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}


      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - uses: pnpm/action-setup@v3
        name: Install pnpm
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - uses: actions/cache@v3
        name: Setup Turbo cache
        with:
          path: .turbo
          key: ${{ runner.os }}-turbo-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-turbo-

      - name: Install dependencies
        run: pnpm install --force
      
      - name: Build all packages
        run: pnpm build

      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
      
      - name: Set default package and version
        id: defaults
        run: |
          echo "package=test-mcp" >> $GITHUB_OUTPUT
          echo "version=patch" >> $GITHUB_OUTPUT

      - name: Determine package path
        id: path
        run: |
          if [ "${{ github.event.inputs.package }}" = "ask-starknet" ]; then
            echo "package_path=packages/mcp" >> $GITHUB_OUTPUT
            echo "package_name=@kasarlabs/ask-starknet-mcp" >> $GITHUB_OUTPUT
            echo "tag_prefix=ask-starknet-mcp" >> $GITHUB_OUTPUT
          else
            echo "package_path=packages/mcps/${{ github.event.inputs.package }}" >> $GITHUB_OUTPUT
            echo "package_name=@kasarlabs/${{ github.event.inputs.package }}-mcp" >> $GITHUB_OUTPUT
            echo "tag_prefix=${{ github.event.inputs.package }}-mcp" >> $GITHUB_OUTPUT
          fi
      
      - name: Bump version
        id: version
        run: |
          cd ${{ steps.path.outputs.package_path }}
          NEW_VERSION=$(npm version ${{ github.event.inputs.version }} --no-git-tag-version | sed 's/v//')
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT
          echo "Version bumped to $NEW_VERSION"
      
      - name: Commit version change
        run: |
          git add ${{ steps.path.outputs.package_path }}/package.json
          git commit -m "chore(${{ github.event.inputs.package }}): release v${{ steps.version.outputs.new_version }}"
          git push
      
      - name: Create and push tag
        run: |
          git tag ${{ steps.path.outputs.tag_prefix }}-v${{ steps.version.outputs.new_version }}
          git push origin ${{ steps.path.outputs.tag_prefix }}-v${{ steps.version.outputs.new_version }}
      
      - name: Publish to npm
        run: |
          cd ${{ steps.path.outputs.package_path }}
          npm publish --access public --dry-run
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.path.outputs.tag_prefix }}-v${{ steps.version.outputs.new_version }}
          name: ${{ steps.path.outputs.package_name }} v${{ steps.version.outputs.new_version }}
          body: |
            Release of ${{ steps.path.outputs.package_name }} v${{ steps.version.outputs.new_version }}
      
            Package: `${{ github.event.inputs.package }}`
          draft: false
          prerelease: false